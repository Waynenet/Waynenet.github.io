name: 同步并创建 Release

# 触发条件：当收到名为 "create-release-tag" 的 repository_dispatch 事件时
on:
  repository_dispatch:
    types: [create-release-tag]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: 检查分支
        uses: actions/checkout@v4

      - name: 提取传递的数据
        # 从事件的 payload 中提取 tag 和 message
        id: payload_data
        run: |
          echo "tag_name=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV
          echo "release_body=${{ github.event.client_payload.message }}" >> $GITHUB_ENV

      - name: 创建 Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag_name }}
          release_name: Release ${{ env.tag_name }}
          # 直接使用从源仓库传递过来的 message
          body: |
            这是从自动化博客部署源仓库自动同步的发布。
            
            源提交信息:
            ${{ env.release_body }}
            
            *由 GitHub Actions 自动创建*

          # 设置为 false，表示这是一个稳定版 Release
          draft: false
          
          # 设置为 false，表示不是预发布版
          prerelease: false
